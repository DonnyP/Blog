<?xml version='1.0' encoding='UTF-8'?>
<rss version='2.0' xmlns:atom='http://www.w3.org/2005/Atom'>
<channel>
<atom:link href='http://blogawesome.com/' rel='self' type='application/rss+xml'/>
<title>
Donny blog
</title>
<link>
http://blogawesome.com/
</link>
<description>
My online portfolio for Co-Op and blog of my work!
</description>
<lastBuildDate>
Tue, 26 Jan 2016 01:21:33 -0500
</lastBuildDate>
<generator>
clj-rss
</generator>
<item>
<guid>
http://blogawesome.com/blog/posts/2016-01-25-Co-Op.html
</guid>
<link>
http://blogawesome.com/blog/posts/2016-01-25-Co-Op.html
</link>
<title>
Co-Op
</title>
<description>
&lt;h3&gt;&lt;a name=&quot;co-op&amp;#95;at&amp;#95;powernoodle&amp;#95;&quot;final&amp;#95;portfolio&quot;&quot;&gt;&lt;/a&gt;Co-Op at Powernoodle &quot;Final Portfolio&quot;&lt;/h3&gt;&lt;p&gt;This post is going to be dedicated for my co-op final project.&lt;/p&gt;&lt;h1&gt;&lt;a name=&quot;1.other/thoughts&quot;&gt;&lt;/a&gt;1.Other/Thoughts&lt;/h1&gt;What an amazing journey through co-op. I'll begin from the very start...I thought co-op was literally just a course where students are plopped right into their placements and work for free. With this in mind, I already had a bad mindset about co-op so I always thought about the negatives. Also I forgot why I took it in the first place but I had it on my schedule so I shrugged it off anyways.Preplacement = first couple of  weeks. nothing too special here but what happened was just a bunch of safety test and the resume/interview/thank you letter. I would probably say that It's carreres but more condense and useful.First placement! At this stage everyone was set to go to their placements and to hand in their resumes. I got a interview with a place ( anonymous for confidentiality) where I would be dealing with some computer programming  just to have some exposure in a real world application. Went the the place and handed him the resume, and got a call for a interview 2 days later.I researched the placement and was prepared for the interview. The interview went pretty well, the only issue for me was that I was being asked if I knew some crazy programming stuff that I still do not remember to this day but they were cool with it since they know that I was just a highschool student. He talked about when I start my placement, they would get me to start off with wordpress and html kind of stuff.  Fast forward to the 1st day of my placement, my energy to go to my placement was pretty high since being this is the first time outside of the classroom environment in school hours. I go to school and my teacher Mr.Linley told me some heart breaking news and told me that they refuse take any co-op students last minute.  I felt kind of angry and confused because they interview went good but I didn’t know why they refused to take me as a co-op student. Go home and I got a call from my interviewer and he said that he did not feel comfortable on doing co-op because he did not feel prepared to keep me busy through the whole semester and jeopardize my education. I told him that it was fine and not to worry about it, we got off in good terms. Since I got my placement dropped, 80% of the students were already at their placements and  I am in class occupied learning more about resume/cover letters etc since my teacher  was looking for another placement that involved with computer programming. This lasted for about a week and I got a interview at Powernoodle!First month of co-op = Immediately right after my interview I started to work on tutorials. This to me was hell because the learning curve for me was as if I had to climb mount everest with no equipment other than a sperm whale attached to my back. It was brutal. I wanted had a feeling of dropping co-op because I thought that I would be reading tutorials and learning about clojure, om react, git , and linux. I talked to my friend Ryan about how I was feeling and he told me just to stick with it for a few weeks to see if it gets better, so I did.Fun begins... My task was to make a bar graph that moved corresponding to user input.img graph. It took  me about a week to get just the x and y axis to take shape of the graph and it was awesome! After making a simple x and y axis I just got it to click in my head and I started to have love towards my assignment! Afterwards it was all just working on my graph and using git to save my changes and updates on the main client for the team. I could add more and get into detail but right now it is 12:58AM and I still need to do a lot of other things to this blog.&lt;h1&gt;&lt;a name=&quot;2.skills&amp;#95;reflection&quot;&gt;&lt;/a&gt;2.Skills Reflection&lt;/h1&gt;Throughout my co op experience at Powernoodle I have gained many valuable skillsThese skills are:-Verbal communication After being a part of the team meetings, verbal communication is the key to success. The reason being is that everyone can share ideas together and problem solve issues.-Teamwork After struggling on making my bar graph to calibrate with values, I asked Brendan for some assistance on it and we got it working together. If I did not asked for some assistance then I would've probably never been able to get my graph to work with some values.-Commercial awareness Making things difficult can be easy, but making things simple can be difficult. For example, I learned that reducing the amount of clicks on the screen makes the experience better for the clients.-Independence Being inside a classroom environment is a big difference compared to a actual working environment. For myself, whenever I get struggle with something for about 1-5 minutes I would raise my hand and get the answer from the teacher since they are there to help students. Easy peasy answers. On the other hand, I don’t want to bother other co-workers so I use google and try my best to solve any problems I get stuck with. If it is really hard problem where at the point I want to jump off a cliff, then that is when I ask.-Computing skills I learned how to use a new operating system called Linux for the first time and understand how the terminal works&lt;h1&gt;&lt;a name=&quot;3.letter&amp;#95;of&amp;#95;reccommendation&quot;&gt;&lt;/a&gt;3.Letter of Reccommendation&lt;/h1&gt;&lt;p&gt;&quot;To Whom it may concern:&lt;/p&gt;&lt;p&gt;Donny joined the Powernoodle team as a high school co-op student for the fall semester of 2015/2016.  During that time, we were able to provide Donny with some instruction in the tooling we used (predominantly Clojure, but a number of other development tools as well).  Donny learned those tools quickly and was able to produce a production-ready charting module for our application during his term.&lt;/p&gt;&lt;p&gt;In addition to exceeding our expectations as a co-op student, Donny was also pleasant to work with.  He was punctual, reliable, and a good fit for our team.  We all look forward to seeing what else he will achieve and would welcome him back in the future.&lt;/p&gt;&lt;p&gt;Please feel free to contact me for further details,&lt;/p&gt;&lt;p&gt;Damon Kropf-Untucht Director, Product Development, Powernoodle His phone # His email&quot;&lt;/p&gt;&lt;h1&gt;&lt;a name=&quot;4.exit&amp;#95;résumé&quot;&gt;&lt;/a&gt;4.Exit Résumé&lt;/h1&gt;The formatting is kind of off a bit because I was on full screen on google chrome so things were automatically adjusted. I love print screen, it makes things very easy.&lt;img src=&quot;/blog/img/cringeResume.jpg&quot; alt=&quot;Image 2&quot; /&gt;&lt;p&gt;GUESS WHICH ONE IS THE UPDATED ONE? &lt;img src=&quot;/blog/img/updatedResume.jpg&quot; alt=&quot;Image 3&quot; /&gt;&lt;/p&gt;&lt;h1&gt;&lt;a name=&quot;5.letter&amp;#95;of&amp;#95;appreciation&quot;&gt;&lt;/a&gt;5.Letter of Appreciation&lt;/h1&gt;&lt;p&gt;&quot;Damon Kropf-Untucht Director, Product Development Powernoodle Inc. 10 Downie St Stratford, ON Suite 201 N5A 7K4&lt;/p&gt;&lt;p&gt;Dear Mr. Kropf-Untucht,&lt;/p&gt;&lt;p&gt;It is a great pleasure that I extend you my most gracious appreciation, and I would like to thank you for allowing me to complete my Co-op placement with Powernoodle. In all honesty, I am very grateful for the fact that you went and took the risk of taking another co-op student last minute whereas you were planning on taking only just one student.&lt;/p&gt;&lt;p&gt;Furthermore, learning about the Clojure language and working on my bar chart assignment has been a blissful journey. It quickly became evident to me that understanding computer programming language required a lot of determination and perseverance. In fact, I have learned an immense deal about the field of computer programming. With this in mind, I now have a much greater appreciation for the skills and knowledge that are required for this career path.&lt;/p&gt;&lt;p&gt;Through this experience, being a part of the Powernoodle team is what made my time here very pleasant instead of being just a co-op student. What is more, are the lessons that I have learned other than programming such as verbal communication, teamwork, commercial awareness, and independence.&lt;/p&gt;&lt;p&gt;As a final point, thank you again for giving me this learning opportunity and trust that you gave me which I value very much. All together, I hope my contribution to the Powernoodle team has fulfilled your expectations in return for a life changing experience. Having said that, I am confident on what the future holds in life with the help of the lessons and experience I have learned. I look forward on to dropping by for a visit in the future.Thank you!&lt;/p&gt;&lt;p&gt;All the best,&lt;/p&gt;&lt;p&gt;Phouthasone (Donny) Phimsavanh&quot;&lt;/p&gt;
</description>
<enclosure>

</enclosure>
<pubDate>
Mon, 25 Jan 2016 00:00:00 -0500
</pubDate>
</item>
<item>
<guid>
http://blogawesome.com/blog/posts/2015-12-18-NewPost.html
</guid>
<link>
http://blogawesome.com/blog/posts/2015-12-18-NewPost.html
</link>
<title>
First post!
</title>
<description>
&lt;p&gt;&lt;img src=&quot;/blog/img/fatpooh.jpg&quot; alt=&quot;Image 1&quot; /&gt;&lt;/p&gt;&lt;p&gt;Since this is my very first post, please enjoy a picture of the obese Whinnie the Pooh!  &quot;MOAR MOAR MOAR HONEY!&quot;&lt;/p&gt;
</description>
<enclosure>

</enclosure>
<pubDate>
Fri, 18 Dec 2015 00:00:00 -0500
</pubDate>
</item>
<item>
<guid>
http://blogawesome.com/blog/posts/2014-12-11-docs.html
</guid>
<link>
http://blogawesome.com/blog/posts/2014-12-11-docs.html
</link>
<title>
Using Cryogen
</title>
<description>
&lt;p&gt;For additional documentation please see the &lt;a href='http://cryogenweb.org'&gt;cryogen site&lt;/a&gt;&lt;/p&gt;&lt;h2&gt;&lt;a name=&quot;features&quot;&gt;&lt;/a&gt;Features&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;blog posts and pages with Markdown (default) or AsciiDoc&lt;/li&gt;&lt;li&gt;tags&lt;/li&gt;&lt;li&gt;table of contents generation&lt;/li&gt;&lt;li&gt;Default Twitter Bootstrap theme&lt;/li&gt;&lt;li&gt;plain HTML page templates&lt;/li&gt;&lt;li&gt;code syntax highlighting&lt;/li&gt;&lt;li&gt;Disqus support&lt;/li&gt;&lt;li&gt;GitHub Gist integration&lt;/li&gt;&lt;li&gt;sitemap&lt;/li&gt;&lt;li&gt;Sass/SCSS compilation&lt;/li&gt;&lt;li&gt;RSS&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;!--more--&gt;&lt;/p&gt;&lt;h2&gt;&lt;a name=&quot;prerequisites&quot;&gt;&lt;/a&gt;Prerequisites&lt;/h2&gt;&lt;p&gt;You will need &lt;a href='https://github.com/technomancy/leiningen'&gt;Leiningen&lt;/a&gt; 2.5.0 or above installed.&lt;/p&gt;&lt;h2&gt;&lt;a name=&quot;usage&quot;&gt;&lt;/a&gt;Usage&lt;/h2&gt;&lt;h3&gt;&lt;a name=&quot;creating&amp;#95;a&amp;#95;new&amp;#95;site&quot;&gt;&lt;/a&gt;Creating a New Site&lt;/h3&gt;&lt;p&gt;A new site can be created using the Cryogen template as follows:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;lein new cryogen my-blog
&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;&lt;a name=&quot;running&amp;#95;the&amp;#95;server&quot;&gt;&lt;/a&gt;Running the Server&lt;/h3&gt;&lt;p&gt;The web server can be started from the &lt;code&gt;my-blog&lt;/code&gt; directory using the &lt;code&gt;lein-ring&lt;/code&gt; plugin:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;lein ring server
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The server will watch for changes in the &lt;code&gt;resources/templates&lt;/code&gt; folder and recompile the content automatically.&lt;/p&gt;&lt;h3&gt;&lt;a name=&quot;site&amp;#95;configuration&quot;&gt;&lt;/a&gt;Site Configuration&lt;/h3&gt;&lt;p&gt;The site configuration file is found at &lt;code&gt;templates/config.edn&lt;/code&gt;, this file looks as follows:&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;clojure&quot;&gt;{:site-title       &amp;quot;My Awesome Blog&amp;quot;
 :author           &amp;quot;Bob Bobbert&amp;quot;
 :description      &amp;quot;This blog is awesome&amp;quot;
 :site-url         &amp;quot;http://blogawesome.com/&amp;quot;
 :post-root        &amp;quot;posts&amp;quot;
 :tag-root         &amp;quot;tags&amp;quot;
 :page-root        &amp;quot;pages&amp;quot;
 :blog-prefix      &amp;quot;/blog&amp;quot;
 :rss-name         &amp;quot;feed.xml&amp;quot;
 :rss-filters      &amp;#91;&amp;quot;cryogen&amp;quot;&amp;#93;
 :recent-posts     3
 :post-date-format &amp;quot;yyyy-MM-dd&amp;quot;
 :sass-src         nil
 :sass-dest        nil
 :resources        &amp;#91;&amp;quot;css&amp;quot; &amp;quot;js&amp;quot; &amp;quot;404.html&amp;quot;&amp;#93;
 :keep-files       &amp;#91;&amp;quot;.git&amp;quot;&amp;#93;
 :disqus?          false
 :disqus-shortname &amp;quot;&amp;quot;
 :ignored-files    &amp;#91;#&amp;quot;\.#.&amp;#42;&amp;quot; #&amp;quot;.&amp;#42;\.swp$&amp;quot;&amp;#93;}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;post-root&lt;/code&gt; - value prepended to all post uri's&lt;/li&gt;&lt;li&gt;&lt;code&gt;tag-root&lt;/code&gt; - value prepended to all tag uri's&lt;/li&gt;&lt;li&gt;&lt;code&gt;page-root&lt;/code&gt; - value prepended to all page uri's&lt;/li&gt;&lt;li&gt;&lt;code&gt;blog-prefix&lt;/code&gt; - prepended to all uri's (must start with slash), nil by default&lt;/li&gt;&lt;li&gt;&lt;code&gt;rss-name&lt;/code&gt; - name of the rss file generated, nil defaults to &lt;code&gt;rss.xml&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;rss-filters&lt;/code&gt; - used to generate tag-based rss feeds for topic-specific rss aggregators. Tags listed here should match tags being used in your posts.&lt;/li&gt;&lt;li&gt;&lt;code&gt;recent-posts&lt;/code&gt; - number of recent posts to display in the sidebar&lt;/li&gt;&lt;li&gt;&lt;code&gt;post-date-format&lt;/code&gt; - date format for your .md or .asc files, yyyy-MM-dd by default&lt;/li&gt;&lt;li&gt;&lt;code&gt;sass-src&lt;/code&gt; - directory containing sources of sass files to be  compiled - defaults to &quot;css&quot; - be sure to include this directory in  your &lt;code&gt;resources&lt;/code&gt; section&lt;/li&gt;&lt;li&gt;&lt;code&gt;sass-dest&lt;/code&gt; - directory where the compiled output CSS would be put    into. defaults to &quot;css&quot; - be sure to include this directory in    your &lt;code&gt;resources&lt;/code&gt; section&lt;/li&gt;&lt;li&gt;&lt;code&gt;resources&lt;/code&gt; - list of folders or files to be copied over from &lt;code&gt;templates&lt;/code&gt; to &lt;code&gt;public&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;keep-files&lt;/code&gt; - list of folders or files that are not wiped in the &lt;code&gt;public&lt;/code&gt; directory. For example, this allows to keep a &lt;code&gt;.git&lt;/code&gt; directory there across recompiles of the site to versionize the generated files&lt;/li&gt;&lt;li&gt;&lt;code&gt;disqus?&lt;/code&gt; - set to true if you want disqus enabled on your site&lt;/li&gt;&lt;li&gt;&lt;code&gt;disqus-shortname&lt;/code&gt; - your disqus shortname&lt;/li&gt;&lt;li&gt;&lt;code&gt;ignored-files&lt;/code&gt; - list of regexps matching files the compiler should ignore&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;a name=&quot;switching&amp;#95;between&amp;#95;markdown&amp;#95;and&amp;#95;asciidoc&quot;&gt;&lt;/a&gt;Switching between Markdown and AsciiDoc&lt;/h3&gt;&lt;p&gt;Cryogen comes with Markdown support as default. If you want to use AsciiDoc instead, open the &lt;code&gt;project.clj&lt;/code&gt; in your created blog (e.g. &lt;code&gt;my-blog&lt;/code&gt;), and change the line in &lt;code&gt;:dependencies&lt;/code&gt; that says &lt;code&gt;cryogen-markdown&lt;/code&gt; to &lt;code&gt;cryogen-asciidoc&lt;/code&gt;. Instead of looking for files ending in &lt;code&gt;.md&lt;/code&gt; in the &lt;code&gt;md&lt;/code&gt; directory, the compiler will now look for files ending in &lt;code&gt;.asc&lt;/code&gt; in the &lt;code&gt;asc&lt;/code&gt; directory.&lt;/p&gt;&lt;h3&gt;&lt;a name=&quot;creating&amp;#95;posts&quot;&gt;&lt;/a&gt;Creating Posts&lt;/h3&gt;&lt;p&gt;The posts are located in the &lt;code&gt;resources/templates/md/posts&lt;/code&gt; for Markdown files or &lt;code&gt;resources/templates/asc/posts&lt;/code&gt; for AsciiDoc files. Posts are written using Markdown or AsciiDoc and each post file should start with the date in the format of &lt;code&gt;yyyy-dd-MM&lt;/code&gt; or what is defined in the &lt;code&gt;:post-date-format&lt;/code&gt; key of &lt;code&gt;config.edn&lt;/code&gt;. The files have to have the extension &lt;code&gt;.md&lt;/code&gt; or &lt;code&gt;.asc&lt;/code&gt; respectively. The compiler will link the posts in order for you using the dates. A valid post file written in Markdown might look as follows:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;2014-19-12-post1.md
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The post content must start with a map containing the post metadata:&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;clojure&quot;&gt;{:title &amp;quot;First Post!&amp;quot;
 :layout :post
 :tags  &amp;#91;&amp;quot;tag1&amp;quot; &amp;quot;tag3&amp;quot;&amp;#93;}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The metadata contains the following keys:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;:title&lt;/code&gt; - the title of the post&lt;/li&gt;&lt;li&gt;&lt;code&gt;:author&lt;/code&gt; - optional key to display the name of the author for the post&lt;/li&gt;&lt;li&gt;&lt;code&gt;:layout&lt;/code&gt; - the layout template to use for the post&lt;/li&gt;&lt;li&gt;&lt;code&gt;:tags&lt;/code&gt; - the tags associated with this post&lt;/li&gt;&lt;li&gt;&lt;code&gt;:toc&lt;/code&gt; - boolean indicating whether table of contents should be generated, defaults to false&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The rest of the post should consist of valid Markdown content, eg:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;## Hello World

This is my first post!

check out this sweet code

    &amp;#40;defn foo &amp;#91;bar&amp;#93;
      &amp;#40;bar&amp;#41;&amp;#41;

Lorem ipsum dolor sit amet, consectetur adipiscing elit.
Nunc sodales pharetra massa, eget fringilla ex ornare et.
Nunc mattis diam ac urna finibus sodales. Etiam sed ipsum
et purus commodo bibendum. Cras libero magna, fringilla
tristique quam sagittis, volutpat auctor mi. Aliquam luctus,
nulla et vestibulum finibus, nibh justo semper tortor, nec
vestibulum tortor est nec nisi.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you wish to enable comments on your posts, create a &lt;a href='https://disqus.com/'&gt;disqus&lt;/a&gt; account and &lt;a href='https://disqus.com/admin/create/'&gt;register&lt;/a&gt; your blog. &lt;code&gt;disqus?&lt;/code&gt; should be set to &lt;code&gt;true&lt;/code&gt; in the config and you must add your &lt;code&gt;disqus-shortname&lt;/code&gt;.&lt;/p&gt;&lt;h3&gt;&lt;a name=&quot;creating&amp;#95;pages&quot;&gt;&lt;/a&gt;Creating Pages&lt;/h3&gt;&lt;p&gt;Pages work similarly to posts, but aren't grouped by date. An example page might be an about page.&lt;/p&gt;&lt;p&gt;The pages contain the following metadata:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;:title&lt;/code&gt; - the title of the page&lt;/li&gt;&lt;li&gt;&lt;code&gt;:layout&lt;/code&gt; - the layout template for the page&lt;/li&gt;&lt;li&gt;&lt;code&gt;:page-index&lt;/code&gt; - a number representing the order of the page in the navbar/sidebar&lt;/li&gt;&lt;li&gt;&lt;code&gt;:navbar?&lt;/code&gt; - determines whether the page should be shown in the navbar, &lt;code&gt;false&lt;/code&gt; by default&lt;/li&gt;&lt;li&gt;&lt;code&gt;:toc&lt;/code&gt; - boolean indicating whether table of contents should be generated, defaults to false&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;a name=&quot;customizing&amp;#95;layouts&quot;&gt;&lt;/a&gt;Customizing Layouts&lt;/h3&gt;&lt;p&gt;Cryogen uses &lt;a href='https://github.com/yogthos/Selmer'&gt;Selmer&lt;/a&gt; templating engine for layouts. Please refer to its documentation to see the supported tags and filters for the layouts.&lt;/p&gt;&lt;p&gt;The layouts are contained in the &lt;code&gt;resources/templates/html/layouts&lt;/code&gt; folder of the project. By default, the &lt;code&gt;base.html&lt;/code&gt; layout is used to provide the general layout for the site. This is where you would add static resources such as CSS and Js assets as well as define headers and footers for your site.&lt;/p&gt;&lt;p&gt;Each page layout should have a name that matches the &lt;code&gt;:layout&lt;/code&gt; key in the page metadata and end with &lt;code&gt;.html&lt;/code&gt;. Page layouts extend the base layout and should only contain the content relaveant to the page inside the &lt;code&gt;content&lt;/code&gt; block. For example, the &lt;code&gt;tag&lt;/code&gt; layout is located in &lt;code&gt;tag.html&lt;/code&gt; and looks as follows:&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;xml&quot;&gt;{% extends &amp;quot;templates/html/layouts/base.html&amp;quot; %}
{% block content %}
&amp;lt;div id=&amp;quot;posts-by-tag&amp;quot;&amp;gt;
    &amp;lt;h2&amp;gt;Posts tagged {{name}}&amp;lt;/h2&amp;gt;
    &amp;lt;ul&amp;gt;
    {% for post in posts %}
        &amp;lt;li&amp;gt;
            &amp;lt;a href=&amp;quot;{{post.uri}}&amp;quot;&amp;gt;{{post.title}}&amp;lt;/a&amp;gt;
        &amp;lt;/li&amp;gt;
    {% endfor %}
    &amp;lt;/ul&amp;gt;
&amp;lt;/div&amp;gt;
{% endblock %}
&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;&lt;a name=&quot;code&amp;#95;syntax&amp;#95;highlighting&quot;&gt;&lt;/a&gt;Code Syntax Highlighting&lt;/h3&gt;&lt;p&gt;Cryogen uses &lt;a href='https://highlightjs.org/'&gt;Highlight.js&lt;/a&gt; for code syntax highlighting. You can add more languages by replacing &lt;code&gt;templates/js/highlight.pack.js&lt;/code&gt; with a customized package from &lt;a href='https://highlightjs.org/download/'&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;The &lt;code&gt; initHighlightingOnLoad&lt;/code&gt; function is called in &lt;code&gt;templates/html/layouts/base.html&lt;/code&gt;.&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;xml&quot;&gt;&amp;lt;script&amp;gt;hljs.initHighlightingOnLoad&amp;#40;&amp;#41;;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;&lt;a name=&quot;use&amp;#95;static&amp;#95;resources&quot;&gt;&lt;/a&gt;Use static resources&lt;/h3&gt;To insert your static resources using md syntax:&lt;pre&gt;&lt;code class=&quot;md&quot;&gt;!&amp;#91;alt tag&amp;#93;&amp;#40;/img/cryogen.png&amp;#41;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&quot;/blog/img/cryogen.png&quot; alt=&quot;alt tag&quot; /&gt;&lt;/p&gt;&lt;h2&gt;&lt;a name=&quot;deploying&amp;#95;your&amp;#95;site&quot;&gt;&lt;/a&gt;Deploying Your Site&lt;/h2&gt;&lt;p&gt;The generated static content will be found under the &lt;code&gt;resources/public&lt;/code&gt; folder. Simply copy the content to a static folder for a server sugh as Nginx or Apache and your site is now ready for service.&lt;/p&gt;&lt;p&gt;A sample Nginx configuration that's placed in &lt;code&gt;/etc/nginx/sites-available/default&lt;/code&gt; can be seen below:&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;server{
  listen 80 default&amp;#95;server;
  listen &amp;#91;::&amp;#93;:80 default&amp;#95;server ipv6only=on;
  server&amp;#95;name localhost &amp;lt;yoursite.com&amp;gt; &amp;lt;www.yoursite.com&amp;gt;;

  access&amp;#95;log /var/log/blog&amp;#95;access.log;
  error&amp;#95;log /var/log/blog&amp;#95;error.log;

  location / {
    alias /var/blog/;
    error&amp;#95;page    404 = /404.html;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Simply set &lt;code&gt;yoursite.com&lt;/code&gt; to the domain of your site in the above configuration and ensure the static content is available at &lt;code&gt;/var/blog/&lt;/code&gt;. Finally, place your custom error page in the &lt;code&gt;/var/blog/404.html&lt;/code&gt; file.&lt;/p&gt;&lt;h2&gt;&lt;a name=&quot;some&amp;#95;sites&amp;#95;made&amp;#95;with&amp;#95;cryogen&quot;&gt;&lt;/a&gt;Some Sites Made With Cryogen&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='http://carmenla.me/blog/index.html'&gt;My personal blog&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='http://cryogenweb.org'&gt;Cryogen Documentation Site&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='http://yogthos.net/'&gt;Yogthos blog&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='http://www.clojure.tn'&gt;Clojure :in Tunisia&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='http://dl1ely.github.io'&gt;dl1ely.github.io&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='http://jonase.github.io/nil-recur'&gt;nil/recur&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='http://tangrammer.github.io/'&gt;on the clojure move&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='http://blog.jethrokuan.com/'&gt;cognizance&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
</description>
<enclosure>

</enclosure>
<pubDate>
Thu, 11 Dec 2014 00:00:00 -0500
</pubDate>
</item>
<item>
<guid>
http://blogawesome.com/blog/posts/2014-11-04-second-post.html
</guid>
<link>
http://blogawesome.com/blog/posts/2014-11-04-second-post.html
</link>
<title>
Yet Another Post
</title>
<description>
&lt;h3&gt;&lt;a name=&quot;this&amp;#95;post&amp;#95;so&amp;#95;fetch&quot;&gt;&lt;/a&gt;This Post So Fetch&lt;/h3&gt;&lt;p&gt;some more stuff happened&lt;/p&gt;
</description>
<enclosure>

</enclosure>
<pubDate>
Tue, 04 Nov 2014 00:00:00 -0500
</pubDate>
</item>
<item>
<guid>
http://blogawesome.com/blog/posts/2014-03-10-first-post.html
</guid>
<link>
http://blogawesome.com/blog/posts/2014-03-10-first-post.html
</link>
<title>
A Post
</title>
<description>
&lt;h3&gt;&lt;a name=&quot;this&amp;#95;post&amp;#95;not&amp;#95;fetch&amp;#95;enough&quot;&gt;&lt;/a&gt;This Post Not Fetch Enough&lt;/h3&gt;&lt;p&gt;some stuff happened&lt;/p&gt;
</description>
<enclosure>

</enclosure>
<pubDate>
Mon, 10 Mar 2014 00:00:00 -0400
</pubDate>
</item>
</channel>
</rss>
